[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cush Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nWelcome To Cush Analytics!\n\n\n\n\n\n\n\nNews\n\n\n\n\nWe strive to help learners understand the fundamentals of data science using real-world datasets.\n\n\n\n\n\n\nApr 22, 2022\n\n\nAlier Reng\n\n\n\n\n\n\n  \n\n\n\n\nMarrying R with Python\n\n\n\n\n\n\n\nData Wrangling\n\n\nPython\n\n\nR\n\n\nData Science\n\n\nData Visualization\n\n\n\n\nThis post demonstrates how to perform data wrangling with the pandas library - I love pandas, although I use R almost exclusively at work. We will first transform and manipulate the data with pandas and then visualize the results with the ggplot2 package.\n\n\n\n\n\n\nJan 30, 2022\n\n\nAlier Reng\n\n\n\n\n\n\n  \n\n\n\n\nThe Living Dead: Walking in the glory of my loving God!\n\n\nThe story of my journey from hell to glory\n\n\n\n\nNews\n\n\nSocial\n\n\n\n\nWhen the civil war broke out in Bortown on May 16, 1983, my father escorted us to the nearby town (Gakyoom) in the suburb of Bortown and then returned to his work at the Missionary Compound in Pakua.\n\n\n\n\n\n\nJun 8, 2021\n\n\nAlier Reng\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\nprop.test(12, 60, alternative = \"less\")\n\n\n    1-sample proportions test with continuity correction\n\ndata:  12 out of 60, null probability 0.5\nX-squared = 20.417, df = 1, p-value = 3.114e-06\nalternative hypothesis: true p is less than 0.5\n95 percent confidence interval:\n 0.0000000 0.3062091\nsample estimates:\n  p \n0.2 \n\n\n\nimport pandas as pd\nimport numpy as np\nfrom IPython.display import display, Markdown, Math\n\nimport sympy as sym\n\nx = sym.symbols('x')\n\neq = x**2 + 3*x\n\ndisplay(Math('x**2 + 3*x'))\n\n<IPython.core.display.Math object>"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To Cush Analytics!",
    "section": "",
    "text": "Hello, data scientists and analysts!\nCush Analytics is my data science blog, through which we share tutorials and articles on data science, statistics, R, Python, machine learning (ML), and natural language processing (NLP). I want to pay KINDNESS forward as former refugee children through online knowledge-sharing.\n\n\n\nPhoto by Christopher Gowe on Unsplash\n\n\nI believe we can create positive impacts in the world by helping those who want to learn how to leverage data science and machine learning techniques to derive business insights from raw data.\nPlease connect and follow us on Twitter, LinkedIn, and YouTube!\nHappy Learning!\n\nCush Analytics Team"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hello! I am Alier Reng."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Alier Reng",
    "section": "Education",
    "text": "Education\nLeTourneau University, Longview, TX | MBA in Information Systems Management | Jan 2016 - Dec 2017\nMiddle Tennessee State University, Murfreesboro, TN | M.S. in Biostatistics | Aug 2009 - May 2011\nUniversity of Texas at Dallas, Richardson, TX | B.S. in Neuroscience | Aug 2005 - May 2008"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Alier Reng",
    "section": "Experience",
    "text": "Experience\nLifePoint Health | Sr. Data Analyst | May 2021 - present\nLifePoint Health | Data Analyst | Dec 2016 - May 2021\nMTSU | Lecturer | Aug 2011 - Dec 2016"
  },
  {
    "objectID": "footer.html",
    "href": "footer.html",
    "title": "Cush Analytics",
    "section": "",
    "text": "body-header: | This page brought to you by <https://example.com> margin-header: | ![ Logo image](logo.png)"
  },
  {
    "objectID": "posts/post-with-code/index.html#cleaning-and-transforming-the-data",
    "href": "posts/post-with-code/index.html#cleaning-and-transforming-the-data",
    "title": "Post With Code",
    "section": "Cleaning and Transforming the Data",
    "text": "Cleaning and Transforming the Data\n\nChecking for Missing Values\nNow that we have imported our dataset, we will clean and manipulate it. First, we will reconfirm the missing values and proceed with our data wrangling process."
  },
  {
    "objectID": "posts/post-with-code/index.html#summarizing-census-data",
    "href": "posts/post-with-code/index.html#summarizing-census-data",
    "title": "Post With Code",
    "section": "Summarizing Census Data",
    "text": "Summarizing Census Data\n\nPopulation by State"
  },
  {
    "objectID": "posts/post-with-code/index.html#closing-remarks",
    "href": "posts/post-with-code/index.html#closing-remarks",
    "title": "Post With Code",
    "section": "Closing Remarks",
    "text": "Closing Remarks\nThis tutorial demonstrates creating a Quarto document with various yaml options to style and format the output. We hope you will find this tutorial helpful. Please let us know if there are any topics you want us to do a tutorial on.\nWith that said, our next tutorial will be on R.\n```"
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html",
    "href": "posts/Quarto Tutorials/index.html",
    "title": "Quarto Tutorial 1",
    "section": "",
    "text": "\\(f(x) = \\int(3x^3 + 4x)dx\\)\n\n# Libraries\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(vroom)\n\n\n4+9\n\n13"
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#testing-this-tool.",
    "href": "posts/Quarto Tutorials/index.html#testing-this-tool.",
    "title": "Quarto Tutorial 3",
    "section": "Testing this tool.",
    "text": "Testing this tool.\n\n3+6\n\n[1] 9"
  },
  {
    "objectID": "posts/My Life Journey/index.html",
    "href": "posts/My Life Journey/index.html",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "",
    "text": "# Introduction {-}\nMy name is Alier Reng. I was born on February 25, 1981, in the present-day Bortown, Jonglei State, South Sudan (however, like many Lost Boys and Lost Girls of Sudan, I am not sure about my exact birthday). Nonetheless, what matters to me is not how old I’m, but rather, I am grateful to the Almighty God for protecting and sustaining me thus far. I’m the third born in my family. My older siblings are girls (Abuol - deceased; Kuer is married with six children and lives in a refugee camp in Uganda), and our last born is a boy (Chiengyol - also deceased).\nWhen the civil war broke out in Bortown on May 16, 1983, my father escorted us to the nearby town (Gakyoom) in the suburb of Bortown and then returned to his work at the Missionary Compound in Pakua. And it took him about two years to join us later in Nyany, Pakeer. Unfortunately, when my father reunited with us in the village, my mother, who’s suffering from Bilharzia (a water-borne disease), went to the western side of the Nile (Aliab in particular) to seek traditional treatment for her sickness, but she died there in 1985.\n# My Life in the Refugee Camps {-}\nIn 1987, I fled my home country of South Sudan at the age of six, and I sought refuge in Ethiopia because of the civil war (Africa’s longest civil war). Unfortunately, after nearly four years in Pinyudo Refugee Camp, the Mengistu Haile Mariam’s government was overthrown. Consequently, we had to flee once again to South Sudan; we eventually wound up in Kakuma Refugee Camp in Northwest Kenya. Bear in mind; we walked barefoot from South Sudan to Ethiopia and from Ethiopia to Kenya through South Sudan (but the youngest among us were fortunate to travel by the UN trucks from Koragareb to Magoos.\nAfter settling in Kakuma, we resumed our studies, mainly under the trees because there were no schools. I enrolled in third Grade in 1993 at Torit Primary School (Torit was a name given to one of our Lost Boys’ groups – Group 29; the former Group 2 in Ethiopia). In 1994, through the Radda Barnen, the UN initiated a program to foster young boys to the families. Thus, I registered myself with three additional boys, and we went to my cousin, Awan Lueth’s home in Group 38.\nThis decision later turned out to be one of the best decisions I have ever made in life because my nephew Guor Awan taught me mathematics and sciences when I was in Grade 4 in 1994. And for the first time in my educational journey, I tied in the 10th position with another young boy. In January 1995, I went to the 5th Grade. And I read and solved all the problems in the 5th Grade’s mathematics textbook before the middle of Term One – Guor had pressed the right button in my brain. I was now excelling in school. So, along with many other boys, I skipped the rest of Grade 5 and went to Grade 6 (I completed both Grades 5 & 6 in one year).\nIn 1996 I graduated from primary school and enrolled in Form One (Grade 9) at Kakuma Refugee Secondary School and graduated in November 2000. Around mid-1998, the United Nations initiated a refugee resettlement program, dubbed “The Lost Boys of Sudan Program.” So, I did my process while in school and completed the process in June 2001 (I believe this was when I passed my final interview). In June 2001, the Lutheran World Federation (LWF) hired and posted me to Jebel Mara primary school as a classroom teacher. I taught Grade 8th English and Grade 7th Government, History & Civic (G.H.C). However, I only taught there for about three months before I was resettled in Utica, NY, by the Lutheran Immigration and Refugee Services (LIRS). We arrived at the JFK International Airport around 8 or 9 pm New York time. And our caseworkers picked us up and took us to the hotels; we spent the night in New York City. And they drove us to Utica on the following morning.\n*Below on the left is our graduation photo taken by our KiSwahili and Business teacher, Benson Chege Njuguna, in 1996, and on the right is my Form IV photo with one of my nephews in 2000. I am reading the newspaper in the left photo and wearing a tanktop in the picture on the right.*\n![](theme/alier_n_colleagues.png) ![ ](theme/alier_n_majak.png)\n# My Life in America {-}\nIn Utica, the LIRS rented me an apartment at the Kennedy Plaza (the tallest building in Utica at the time). However, I did not spend a single day or night in it because my groupmates, whom we had grouped ourselves in Kakuma but were randomly selected to come to the U.S. first, asked me to stay with them at their apartment. They were rented four bedrooms or so. We later became known to the South Sudanese community in Utica as the “10-Blecker Street’s Brothers.” In addition to the assistance and support we received from the LIRS, Pastor Sharon Hare of Mariah Olivet Presbyterian church and her daughter Michelle and the congregation also supported us. They bought us winter coats and many other personal items.\nAnd most importantly, Pastor Sharon and Michelle picked us up every Sunday morning and drove us home after the church service. Pastor Sharon was like a mother to me. She asked me to write an article to be published in the church bulletin paper every Sunday.\nUnfortunately, because the economy of New York state was devastated by the September 11th terrorist incidents, we decided to move to other states to seek employment and other opportunities lacking in Utica. As a result, my distant cousin Ngor Deng Achiek and I went to Dallas, TX, in December 2001 (Emmanuel Ayuen Biar later joined us in Dallas). Peter Riak Garang and Lual Jol went to North and South Dakota, respectively. Peter Ngeth Nhiany and Mamer Alier went to New Hampshire, and Ayuen Riak Deng went to Phoenix, Arizona. I believe Jal and Gatluak went to Memphis, but I could be wrong (it’s been about 20 years from the date I am writing this personal story).\nWhen we arrived in the Big D (Dallas), we were well received by friends and the Catholic Charities. Luckily, my new caseworkers, Renae James, Mullah Nkrumah, and Mohammed Salim, helped me obtain a job as an order puller at Frito-Lay in Carrollton, TX, within my first two weeks in Dallas. I started at $10.50 an hour in January 2002. Catholic Charities was my new receptive home – thanks to the Almighty God for the connections and blessings!\nNonetheless, my work schedule at Frito-Lay was weird; we had a fixed shift-starting time but a flexible shift-ending time. So, we went home as soon as there was nothing to do or stayed late past midnight. And this caused transport challenges because we used public transportation. Unfortunately, the bus services ended at midnight. Hence, Renae (who lived in Plano at the time) used to come to our workplace, picked us up, dropped us off at our respective apartments, and then went back to her home in the middle of the night.\nThis bothered me! So, I asked her to help me find a car; because it’s unfair for her to wake up in the middle of the night to give us the ride home. Consequently, Renae, Mohammed, and Mullah arranged a driving school for me. Thus, a driver picked me up every morning, took me for training, and then dropped me off at work after the training. Meanwhile, Renae and I were busy looking for a cheap car. Thank God! We found a 1993 2-door Oldsmobile Achieva at her friend’s dealership, and I paid $2,600 for it.\nIn August 2003, I enrolled at Richland College and transferred to the University of Texas at Dallas in August 2005, and I graduated on May 10, 2008, with a Bachelor of Science in Neuroscience. I initially wanted to go to medical school, so I took over 130 credit hours. Unfortunately, after graduating from UTD, I decided against going to medical school, and I enrolled in a university-sponsored Princeton Review’s LSAT program. But I failed the LSAT – my new door was now closed.\nNonetheless, to succeed in life, you must continually reevaluate your plans before taking any significant action - this saves you from making unintended mistakes that may derail your progress later. For it is written that “Look carefully then how you walk, not as unwise but as wise, making the best use of the time because the days are evil.” (Ephesians 5:15-16, ESV)\nIn mid-2009, a fellow South Sudanese finishing her undergraduate studies at MTSU told me about the Master of Science in Professional Science program, specifically Health Care Informatics, and the requirements for acceptance into the program and receiving a graduate assistantship. Afterward, I went to the university website and reviewed the exact admission conditions. And I purchased a GRE book plus online resources, studied and took GRE, and obtained better scores than was required.\nOn my first day on MTSU camp, my current supervisor, Sandi Hyde, was a student in the same program but had been there a semester before me. So, she took me to the Nursing Building because I had applied to the Health Care Informatics Master’s program (I later changed my concentration to Biostatistics and graduated on May 10, 2011). But luckily, after graduating, Dr. Nelson, who’s the Chairman of the Department of Mathematical Sciences at the time, asked me to teach introductory mathematics courses and applied statistics. Therefore, I taught mathematics and statistics from August 2011 to December 2016. I accepted a data analyst position at LifePoint Health in December 2016 and that’s where I am currently still working.\nBut while teaching at MTSU, I also worked at Amazon warehouse both in Lebanon and Murfreesboro, TN, respectively, during the summer semesters, and I drove for Uber between 2015 and 2016. Moreover, I also worked as a lot loader and later as a cashier at Home Deport between 2003 and 2014 (Allen & Dallas, TX; Murfreesboro, TN).\nFurther, I enrolled in the Information Systems Management program at LeTourneau University in 2016 and graduated with an MBA in 2017. Next, I enrolled in a Doctor of Business Administration program at Liberty University in 2018. Unfortunately, I stopped taking classes in July 2019 until now because of the lack of funding. But in addition to work and schooling, I have taken numerous data science courses online, and I have read a plethora of data science articles and several books. And I write and share a few tutorials and articles on my data science blog (https://alierwaidatascience.com).\n## Death, Disintegration & Salvation {-}\nIn 1989, I caught a mysterious sickness. Because I was too young, I could not work (i.e., go to the bush to gather firewood, building materials, or fetch water from the river). My roommates, Bullen Riak Deng and Deng Anger took care of us. However, things changed one morning; I was selected to prepare the squad’s meal. And coincidentally, we’re scheduled to receive our vaccinations that morning.\nConsequently, after starting to pound the maize (corn), I was asked to put down the pestle and go to the nearby hospital for vaccination. So, I did as the group leaders told me, and we went together as a group. We returned later, around 9 am. But when I resumed pounding, the pestle slipped from my hands as I raised it, and it fell onto my back. And that’s the end and the beginning of my suffering. I could no longer continue performing the task assigned to me - I was now sick. I lied in bed in agony until the last reshuffling (our caretakers often mingled us with boys from other groups and reassigned us to different groups to build new friendships and relationships and promote unity among the boys from various tribes and subtribes of South Sudan).\nAfter that, I dreamed every night as if the whole of my family and I were gathered by the Sudanese army and placed in a small plane, and the military slaughtered us in turn, and then we’re forced to eat his/her flesh. This caused me to screamed bitterly throughout the night. Other nights, I saw Sudanese military personnel squatting in my roommate’s backpack (schoolbag). Again, I screeched with tremendous pain the whole night. Yet, other nights, I saw my family members being slaughtered, and their bodies were thrown into the latrine outside our group’s fence. I was terrified. I didn’t know whether I would recover from that sickness. At the same time, my younger brother (my follower) also caught a mysterious disease back in South Sudan. However, I was not aware of his illness because there’s no communication between our families and us in South Sudan and Ethiopia, respectively.\nOur authority or leadership sent the first batch (battalion) to Markas (Outpost) for basic military training during that time. Nonetheless, I could not go with them because I was sick. Shortly after their departure, I was hospitalized at Pinyudo Refugee Hospital, just a walking distance from our group compound. While at the hospital, I had another dream. This time, I was wrestling with my younger brother. We wrestled and wrestled until I finally managed to throw him into a heap of ashes (where my mother used to dump the ashes). On the following morning, I woke up free of sickness - I had recovered after that ordeal. as a result, I discharged myself by simply walking to my group. Later that year, my cousin’s family and relatives came from South Sudan. They told me that my father had passed away but did not inform me of my brother’s death (although I knew that from my dream).\nI later attended the basic military training with the second batch after the first batch was released. However, no one had yet validated my dream regarding the death of my younger brother. Fortunately, one day, my cousin, Gai Deng Garang, who had just come from South Sudan with his mother and siblings, accidentally dropped the news of my brother’s death. While my father was taking care of my brother, they both became sick and passed away consecutively. This happened while we were resting on the river bank after a long swim. When my cousin noticed that he had revealed this to me, he wanted to cry, but I calmed him down, and I narrated my dream (my cousin and I knew each other well since we were kids in Bortown).\nFrom henceforth, my family began to disintegrate. My elder sister, Abuol, who had always stayed with my aunt Athou Manyuoth Diing’s family, decided to go her way. Still, my older sister Kuer chose to live with the rest of our uncles’ families. Unfortunately, Abuol was later married to Manyang Ajok Nyok from Bioor (Abang). After their marriage, Manyang, who was an SPLM/A soldier, was killed in 1992. However, according to our culture, my sister was given to her brother-in-law, Biar (Biar was a drinker). One day, they fought, and Biar bit her, and my sister died in May 1997 as a result. Hence, my sister Kuer and I are the only surviving members of our family. Unfortunately, Kuer’s husband, Ayuen Arok Majok, lost his sight around 2012.\nMy family’s destruction (death & disintegration) has brought me salvation because the dream about my younger brother’s death tells me that the nature had a choice between my brother and me. Unfortunately, my brother died, and I survived, but I can’t fathom why God chose me over my younger brother. All I can do is speculate. For instance, if I had died and my brother survived, maybe my brother would still have not made it because of his living conditions. Or maybe God wanted to bring civilization to my people through me; since I already had a glimpse of opportunities on the horizon. No one knows but God!\nThese questions and many more are what keep me going - always working harder to bring my people what they never had before. And the dream about my brother’s death is why I consider myself “the living dead!” Because I would have died if God had not chosen me over my younger brother.\n## Hope and Healing {-}\nDespite all the challenges I have faced as a child in various refugee camps and the U.S., God has restored my hope by blessing me with a beautiful wife. A wife who understands me and wholeheartedly supports all initiatives through which I aspire to give back to humanity and our South Sudanese community in the diaspora. And a handsome baby boy who’s turning six months this Sunday (May 23rd). Moreover, God has blessed me with good health to work and support my sister’s family and my relatives. In the same vein, God has invigorated my faith and aspirations to focus on what lies ahead, not what has happened to my family.\n> “I have heard your prayer, I have seen your tears; Surely I will heal you.” (2 Kings 20:5, NKJV)\n\n_Below are our photos. We’re not sharing our son’s photo yet._\n![Angeth D. Garang](theme/angeth.jpg) ![ Alier Reng](theme/areng.jpg)\n\n## Conclusion {-}\nHave you ever wondered why you are the only one going through hardship? Or why are things not working out as you planned them?\nWell, you are not alone. We all feel that way sometimes. However, we set ourselves apart from the rest of our fellow human beings by how we approach these challenges or hardships.\nFor me, I love to put myself in someone else’s shoes. Say a little girl in Syria, or a little boy in South Sudan who is eager to learn, but his parents can’t afford to send him to a better school in the neighboring countries. Or yet, a single mother with younger kids in Guatemala who wishes she had a chance to come to the U.S. so that her kids could have a better future.\nWhen we reason outside the box, we find better solutions to our problems without losing sleep over them regardless of how numerous they are. Additionally, I live by Matt. 6:33, which tells us first to seek God’s kingdom and righteousness, and after that, we shall receive everything we want. With that said, it’s this belief and faith in God that has brought me thus far. For God always puts me amid wonderful people and abundant resources within my reach. Furthermore, my faith allows me to put humanity and community service above my interest, which has served me well."
  },
  {
    "objectID": "posts/My Life Journey/index.html#introduction",
    "href": "posts/My Life Journey/index.html#introduction",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "Introduction",
    "text": "Introduction\nMy name is Alier Reng. On February 25, 1981, I was born in the present-day Bortown, Jonglei State, South Sudan (however, like many Lost Boys and Lost Girls of Sudan, I am not sure about my exact birth date). Nonetheless, what matters to me is not how old I’m, but rather, I am grateful to the Almighty God for protecting and sustaining me thus far. I’m the third born in my family. My older siblings are girls (Abuol - deceased; Kuer is married with six children and lives in a Refugee Camp in Uganda), and our last born was a boy named Chiengyol - also deceased.\nWhen the civil war broke out in Bortown on May 16, 1983, my father escorted us to the nearby town (Gakyoom) in the suburb of Bortown and then returned to his work at the Missionary Compound in Pakua. And it took him about two years to join us later in Nyany, Pakeer. Unfortunately, when my father reunited with us in the village, my mother, who’s suffering from Bilharzia (a water-borne disease), went to the western side of the Nile (Aliab in particular) to seek traditional treatment for her sickness, but she died there in 1985."
  },
  {
    "objectID": "posts/My Life Journey/index.html#my-life-in-the-refugee-camps",
    "href": "posts/My Life Journey/index.html#my-life-in-the-refugee-camps",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "My Life in the Refugee Camps",
    "text": "My Life in the Refugee Camps\nIn 1987, I fled my home country of South Sudan at the age of six, and I sought refuge in Ethiopia because of the civil war (Africa’s longest civil war). Unfortunately, after nearly four years in Pinyudo Refugee Camp, the Mengistu Haile Mariam’s government was overthrown. Consequently, we had to flee once again to South Sudan; we eventually wound up in Kakuma Refugee Camp in Northwest Kenya. We walked barefoot from South Sudan to Ethiopia and from Ethiopia to Kenya through South Sudan (but the youngest among us were fortunate to travel by the UN trucks from Koragareb to Magoos.\nAfter settling in Kakuma, we resumed our studies solely under the trees because there were no schools. I enrolled in the third grade in 1993 at Torit primary school (Torit was a name given to one of our Lost Boys’ groups – Group 29; the former Group 2 in Ethiopia). In 1994, through the Radda Barnen, the UN initiated a program to pair young boys with families. Thus, I registered myself with three additional boys, and we went to my cousin Awan Lueth’s home in Group 38.\nThis decision later became one of the best decisions I had ever made because my nephew Guor Awan taught me mathematics and sciences when I was in grade 4 in 1994. And for the first time in my educational journey, I tied in the 10th position with another young boy. In January 1995, I went to the 5th grade. And I read and solved all the problems in the 5th-grade mathematics textbook before the middle of Term 1 – Guor had pressed the right button in my brain. I was now excelling in school. So, along with many other boys, I skipped the rest of grade 5 and went to grade 6 (I completed both grades 5 & 6 in one year).\nIn 1996 I graduated from primary school, enrolled in Form One at Kakuma Refugee Secondary School, and graduated in November 2000. Around mid-1998, the United Nations initiated a refugee resettlement program dubbed “The Lost Boys of Sudan” program. So, I did my process while in school and completed the remainder of the process in June 2001 (I believe this was when I passed my final interview). In June 2001, the Lutheran World Federation (LWF) hired and posted me to Jebel Mara primary school as a classroom teacher. I taught 8th-grade English and 7th-grade Government, History & Civic (G.H.C). However, I only taught there for about three months before resettling in Utica, NY, through the Lutheran Immigration and Refugee Services (LIRS). We arrived at the JFK International Airport around 8 or 9 pm, New York time. And our caseworkers picked us up and took us to the hotels; we spent the night in New York City. And they drove us to Utica on the following morning.\n\n\n\nMe with my classmates at Kakuma town after completing KCPE in 1996\n\n\n\n\nI am the one reading the newspaper in the photo."
  },
  {
    "objectID": "posts/My Life Journey/index.html#my-life-in-america",
    "href": "posts/My Life Journey/index.html#my-life-in-america",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "My Life in America",
    "text": "My Life in America\nIn Utica, the LIRS rented me an apartment at the Kennedy Plaza (the tallest building in Utica at the time). However, I did not spend a single day or night in it because my groupmates, whom we had grouped ourselves in Kakuma but were randomly selected to come to the U.S. first, asked me to stay with them at their apartment. They were rented four bedrooms or so. We later became known to the South Sudanese community in Utica as the “10 Blecker Street’s Brothers.” In addition to the assistance and support we received from the LIRS, Pastor Sharon Hare of Mariah Olivet Presbyterian church and her daughter Michelle and the congregation also supported us. They bought us winter coats and many other personal items.\nAnd most importantly, Pastor Sharon and Michelle picked us up every Sunday morning and drove us home after the church service. Pastor Sharon was like a mother to me. She asked me to write articles to be published in the church bulletin paper every Sunday.\nUnfortunately, because the economy of New York state was devastated by the September 11th terrorist incidents, we decided to move to other states to seek employment and other opportunities lacking in Utica. As a result, my distant cousin Ngor Deng Achiek and I went to Dallas, TX, in December 2001 (Emmanuel Ayuen Biar later joined us in Dallas). Respectively, Peter Riak Garang and Lual Jol went to North and South Dakota. Peter Ngeth Nhiany and Mamer Alier went to New Hampshire, and Ayuen Riak Deng went to Phoenix, Arizona. Jal went to Memphis, TN, and Gatluak went to Nebraska.\nWhen we arrived in the Big D (Dallas), we were well received by friends and the Catholic Charities. Luckily, my new caseworkers, Renae James, Mullah Nkrumah, and Mohammed Salim, helped me obtain a job as an order puller at Frito-Lay in Carrollton, TX, within my first two weeks in Dallas. I started at $10.50 an hour in January 2002. Catholic Charities was my new receptive home – thanks to the Almighty God for the connections and blessings!\nNonetheless, my work schedule at Frito-Lay was weird; we had a fixed shift-starting time but a flexible shift-ending time. So, we went home as soon as there was nothing to do or stayed late past midnight. And this caused transport challenges because we used public transportation. Unfortunately, the bus services ended at midnight. Hence, Renae (who lived in Plano at the time) used to come to our workplace, pick us up, drop us off at our respective apartments, and then go back to her home in the middle of the night.\nThis bothered me! So, I asked her to help me find a car; because it was unfair for her to wake up in the middle of the night to give us the ride home. Consequently, Renae, Mohammed, and Mullah arranged a driving school for me. Thus, a driver picked me up every morning, took me for training, and then dropped me off at work after the training. Meanwhile, Renae and I were busy looking for a cheap car. Thank God! We found a 1993 2-door Oldsmobile Achieva at her friend’s dealership, and I paid $2,600 for it.\nIn August 2003, I enrolled at Richland College and transferred to the University of Texas at Dallas in August 2005, and I graduated on May 10, 2008, with a Bachelor of Science in Neuroscience. I initially wanted to go to medical school, so I took over 130 credit hours. Unfortunately, after graduating from UTD, I decided against going to medical school, and I enrolled in a university-sponsored Princeton Review’s LSAT program. But I failed the LSAT – my new door was now closed.\nNonetheless, to succeed in life, you must continually reevaluate your plans before taking any significant action - this saves you from making unintended mistakes that may derail your progress later. For it is written that “Look carefully then how you walk, not as unwise but as wise, making the best use of the time because the days are evil.” (Ephesians 5:15-16, ESV)\nIn mid-2009, a fellow South Sudanese finishing her undergraduate studies at MTSU told me about the Master of Science in Professional Science program, specifically Health Care Informatics, and the requirements for acceptance into the program and receiving a graduate assistantship. Afterward, I went to the university website and reviewed the exact admission conditions. And I purchased a GRE book plus online resources, studied and took GRE, and obtained better scores than was required.\nOn my first day at MTSU camp, my current supervisor, Sandi Hyde, was a student in the same program but had been there a semester before me. So, she took me to the Nursing Building because I had applied to the Health Care Informatics Master’s program (I later changed my concentration to Biostatistics and graduated on May 10, 2011). But luckily, after graduating, Dr. Nelson, who was the Chairman of the Department of Mathematical Sciences at the time, asked me to teach introductory mathematics courses and applied statistics. Therefore, I taught mathematics and statistics from August 2011 to December 2016. I accepted a data analyst position at LifePoint Health in December 2016, and that’s where I am currently still working.\nBut while teaching at MTSU, I also worked at an Amazon warehouse in Lebanon and Murfreesboro, TN, respectively, during the summer semesters, and I drove for Uber between 2015 and 2016. Moreover, I worked as a lot loader and later as a cashier at Home Deport between 2003 and 2014 in Allen and Dallas, TX, and Murfreesboro, TN).\nFurther, I enrolled in the Information Systems Management program at LeTourneau University in 2016 and graduated with an MBA in 2017. Next, I enrolled in a Doctor of Business Administration program at Liberty University in 2018. Unfortunately, I stopped taking classes in July 2019 until now because of the lack of funding. But in addition to work and schooling, I have taken numerous data science courses online, and I have read a plethora of data science articles and several books. And I write and share a few tutorials and articles on my data science blog (https://cushanalytics.com)."
  },
  {
    "objectID": "posts/My Life Journey/index.html#hope-and-healing",
    "href": "posts/My Life Journey/index.html#hope-and-healing",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "Hope and Healing",
    "text": "Hope and Healing\nDespite all the challenges I have faced as a child in various refugee camps and the U.S., God has restored my hope by blessing me with a beautiful wife. A wife who understands me and wholeheartedly supports all initiatives through which I aspire to give back to humanity and our South Sudanese community in the diaspora. And a handsome baby boy who’s turning six months this Sunday (May 23rd). Moreover, God has blessed me with good health to work and support my sister’s family and my relatives. In the same vein, God has invigorated my faith and aspirations to focus on what lies ahead, not what has happened to my family.\n\n\nI have heard your prayer, I have seen your tears; Surely I will heal you. (2 Kings 20:5, NKJV)\n\n\n\nMy wife Angeth Deng Garang"
  },
  {
    "objectID": "posts/My Life Journey/index.html#conclusion",
    "href": "posts/My Life Journey/index.html#conclusion",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "Conclusion",
    "text": "Conclusion\nHave you ever wondered why you are the only one going through hardship? Or why are things not working out as you planned them?\nWell, you are not alone. We all feel that way sometimes. However, we set ourselves apart from the rest of our fellow human beings by how we approach these challenges or hardships.\nFor me, I love to put myself in someone else’s shoes. Say a little girl in Syria or a little boy in South Sudan who is eager to learn, but his parents can’t afford to send him to a better school in the neighboring countries. Or, yet, a single mother with younger kids in Guatemala who wishes she had a chance to come to the U.S. so that her kids could have a better future.\nWhen we reason outside the box, we find better solutions to our problems without losing sleep over them, regardless of how numerous they are. Additionally, I live by Matt. 6:33, which tells us first to seek God’s kingdom and righteousness, and after that, we shall receive everything we want. With that said, this belief and faith in God have brought me thus far. God always puts me amid wonderful people and abundant resources within my reach. Furthermore, my faith allows me to put humanity and community service above my interest, which has served me well."
  },
  {
    "objectID": "posts/My Life Journey/index.html#death-disintegration-salvation",
    "href": "posts/My Life Journey/index.html#death-disintegration-salvation",
    "title": "The Living Dead: Walking in the glory of my loving God!",
    "section": "Death, Disintegration & Salvation",
    "text": "Death, Disintegration & Salvation\nIn 1989, I caught a mysterious sickness. Because I was too young, I could not work (i.e., go to the bush to gather firewood, building materials, or fetch water from the river). My roommates, Bullen Ayuen Riak and Deng Anger, took care of us. However, things changed one morning; I was selected to prepare the squad’s meal. And coincidentally, we’re scheduled to receive our vaccinations that morning.\nConsequently, after starting to pound the maize (corn), I was asked to put down the pestle and go to the nearby hospital for vaccination. So, I did as the group leaders told me, and we went together as a group. We returned later, around 9 am. But when I resumed pounding, the pestle slipped from my hands as I raised it, and it fell onto my back. And that’s the end and the beginning of my suffering. I could no longer continue performing the assigned task - I was now sick. I lay in bed in agony until the last reshuffle. Our caretakers often mingled with boys from other groups. They reassigned us to different groups to build new friendships and relationships and promote unity among the boys from various tribes and sub-tribes of South Sudan.\nAfter that, I dreamed every night as if the whole of my family and I were gathered by the Sudanese army and placed in a small plane, and the military slaughtered us in turn, and then we were forced to eat the dead. This caused me to scream bitterly throughout the night. Other nights, I saw Sudanese military personnel squatting in my roommate’s backpack (schoolbag). Again, I screeched with tremendous pain the whole night. Yet, I saw my family members being slaughtered on other nights, and their bodies were thrown into the latrine outside our group’s fence. I was terrified. I didn’t know whether I would recover from that sickness. At the same time, my younger brother (my follower) also caught a mysterious disease back in South Sudan. However, I was unaware of his illness because there was no communication between my family and me in South Sudan and Ethiopia.\nOur authority sent the first batch (battalion) of boys to Markas (Outpost) for basic military training during that time. Nonetheless, I could not go with them because I was sick. Shortly after their departure, I was hospitalized at Pinyudo Refugee Hospital, just a walking distance from our group compound. While at the hospital, I had another dream. This time, I was wrestling with my younger brother. We wrestled and wrestled until I finally managed to throw him into a heap of ashes (where my mother used to dump the ashes). The following morning, I woke up free of sickness - I had recovered after that ordeal. As a result, I discharged myself by simply walking to my group. Later that year, my cousin’s family and relatives came from South Sudan, and they told me that my father had passed away but did not inform me of my brother’s death (although I knew that from my dream).\nAfter the first batch was released, I later attended the basic military training with the second batch. However, no one had yet validated my dream regarding the death of my younger brother. Fortunately, one day, my cousin, Gai Deng Garang, who had just come from South Sudan with his mother and siblings, accidentally dropped the news of my brother’s death. While my father took care of my brother, they both became sick and passed away consecutively. This happened while we rested on the river bank after a long swim. When my cousin noticed that he had revealed this to me, he wanted to cry, but I calmed him down, and I narrated my dream (my cousin and I had known each other well since we were kids in Bortown).\nFrom henceforth, my family began to disintegrate. My elder sister, Abuol, who had always stayed with my aunt Athou Manyuoth Diing’s family, decided to go her way. Still, my older sister Kuer chose to live with the rest of our uncles’ families. Unfortunately, Abuol was later married to Manyang Ajok Nyok from Bioor (Abang). After their marriage, Manyang, who was an SPLM/A soldier, was killed in 1992. However, according to our culture, my sister was given to her brother-in-law, Biar (Biar was a drinker). One day, they fought, and Biar bit her, and my sister died in May 1997 as a result. Hence, my sister Kuer and I are the only surviving members of our family. Unfortunately, Kuer’s husband, Ayuen Arok Majok, lost his sight around 2012.\nMy family’s destruction (death & disintegration) has brought me salvation because the dream about my younger brother’s death tells me that nature had a choice between my brother and me. Unfortunately, my brother died, and I survived, but I can’t fathom why God chose me over my younger brother. All I can do is speculate. For instance, if I had died and my brother survived, maybe my brother would still have not made it because of his living conditions. Or maybe God wanted to bring civilization to my people through me; since I already had a glimpse of opportunities on the horizon. No one knows but God!\nThese questions and many more are what keep me going - always working harder to bring my people what they never had before. And the dream about my brother’s death is why I consider myself “the living dead!” Because I would have died if God had not chosen me over my younger brother."
  },
  {
    "objectID": "ReadMe.html#cush-analytics",
    "href": "ReadMe.html#cush-analytics",
    "title": "Cush Analytics",
    "section": "Cush Analytics",
    "text": "Cush Analytics\n\n\n\nNetlify Status\n\n\nCush Analytics is my data science blog where I share tutorials and articles on data science, statistics, R, Python, machine learning (ML), and natural language processing (NLP). I aspire to create positive impacts through knowledge-sharing online."
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#introduction",
    "href": "posts/Quarto Tutorials/index.html#introduction",
    "title": "Marrying R with Python",
    "section": "Introduction",
    "text": "Introduction\n\nMost data scientists and data analysts would agree with the assertion that data scientists and data analysts spend about 80% of their time cleaning and transforming data - or, put, performing data wrangling. Because it’s imperative to transform your data into a tidy form before using it in your data science project. This means that aspiring data scientists and data analysts must learn data manipulation techniques and know the data munging tools in their programming languages of choice to succeed in their data science careers. This post demonstrates how to perform data wrangling with the pandas library - I love pandas, although I use R almost exclusively at work. We will first transform and manipulate the data with pandas and then visualize the results with the ggplot2 package.\nPandas was written by Wes McKinney as ” the open-source Python library for data analysis.” (Python for Data Analysis, 2017, pp.111)\n\npandas is built on top of NumPy and makes it easy to use in NumPy-centric applications. (Python for Data Analysis, 2017, pp.111)\n\nThis is the first article in our Data Wrangling With pandas series. So keep an eye on our next article - we plan to be releasing at least one piece quarterly.\n\nLoading R Packages\nHere we’ll load both tidyverse, even though we’ll use dplyr and ggplot2 from tidyverse (we could have loaded these packages individually, but we decided to load them this way).\n\n# Libraries\nlibrary(reticulate)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.5     ✔ purrr   0.3.4\n✔ tibble  3.1.6     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggthemes)\n\n\n\nLoading Python Libraries\nHere we’ll load pandas and NumPy libraries.\n\n# Importing the libraries\nimport pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#transforming-the-data",
    "href": "posts/Quarto Tutorials/index.html#transforming-the-data",
    "title": "Marrying R with Python",
    "section": "Transforming the Data",
    "text": "Transforming the Data\nData transformation is the most crucial step when doing a data science project (because the success of your project depends on having a cleaned, tidy data). Therefore, it’s worthwhile taking your time to ensure that your data is thoroughly cleaned and transformed appropriately. This is the topic or objective of this article - performing data wrangling with the pandas library.\n\nImporting the Dataset\nWe’ll use the South Sudan 2008 Census dataset in this project. So, we’ll load it as shown below.\n\n# Importing the dataset\nss_census_raw = pd.read_csv('/Users/areng/Desktop/cushanalytics/00_data/ss_2008_census_data_raw.csv')\n\n# Inspect the first 5 Rows\nss_census_raw.head()\n\n  Region Region Name Region - RegionId  ...  Scale    Units      2008\n0  KN.A2  Upper Nile             SS-NU  ...  units  Persons  964353.0\n1  KN.A2  Upper Nile             SS-NU  ...  units  Persons  150872.0\n2  KN.A2  Upper Nile             SS-NU  ...  units  Persons  151467.0\n3  KN.A2  Upper Nile             SS-NU  ...  units  Persons  126140.0\n4  KN.A2  Upper Nile             SS-NU  ...  units  Persons  103804.0\n\n[5 rows x 10 columns]\n\n\n\n# Inspect the last 5 rows\nss_census_raw.tail()\n\n            Region  ...    2008\n448         KN.A11  ...  5274.0\n449         KN.A11  ...  8637.0\n450            NaN  ...     NaN\n451        Source:  ...     NaN\n452  Download URL:  ...     NaN\n\n[5 rows x 10 columns]\n\n\n\n\nDeleting Rows with Missing Values\nAs you can see in the above outputs, our dataset contains several columns that we do not need or do not make sense for our purpose, and the last 3 rows contain missing values. Next, let’s also inspect the last five rows and determine if our dataset has any missing values.\n\n# Checking for missing values\nss_census_raw.isna().sum()\n\nRegion               1\nRegion Name          1\nRegion - RegionId    3\nVariable             3\nVariable Name        3\nAge                  3\nAge Name             3\nScale                3\nUnits                3\n2008                 3\ndtype: int64\n\n\nThe above outputs of the last five rows indicate that our data contains multiple rows with missing values (or nas), the data source, and the download URL where we obtained our dataset. We’ll delete these rows that do not contribute any value to our analysis. Also, we see above that our dataset consists of 10 columns (or variables/features) and 453 rows (or observations). To obtain or display our data dimensions in Python, we use the shape, a data attribute. Python's data attributes are different from functions in that we omit the parentheses \"()\" after the attribute. Further, above, we displayed the counts of missing values in each column of our dataset with isna() to extract the rows with nas and then tallied them with sum() to find the sum of the rows with the missing values in each column. These methods come in handy when we want to quickly summarize the rows and columns with missing values in our dataset.\nNext, let’s check the count of rows and columns of our dataset.\n\n# Checking the number of rows and columns\nss_census_raw.shape\n\n(453, 10)\n\n\n\n\nExtracting Column Names\nBefore we begin our data cleaning process, let’s extract the columns as a list using the .to_list() method and subset our data with the columns of interest. Here, we’re only interested in these columns: ‘Region Name’, ‘Variable Name’, ‘Age Name’, and ‘2008’.\n\n# Print column names to the list\nss_census_raw.columns.to_list()\n\n# Subset the columns\n\n['Region', 'Region Name', 'Region - RegionId', 'Variable', 'Variable Name', 'Age', 'Age Name', 'Scale', 'Units', '2008']\n\ncols = ['Region Name', 'Variable Name', 'Age Name', '2008']\n\n\n\nCleaning the Data\n\n# Rename columns\ncols_names = {'Region Name':'state', \n             'Variable Name':'gender', \n             'Age Name':'age_cat', \n             '2008':'population'}\n             \n# Create new age categories           \nnew_age_cats = {'0 to 4':'0-14', \n                '5 to 9':'0-14',\n                '10 to 14':'0-14',\n                '15 to 19':'15-29', \n                '20 to 24':'15-29',\n                '25 to 29':'15-29',\n                '30 to 34':'30-49', \n                '35 to 39':'30-49',\n                '40 to 44':'30-49',\n                '45 to 49':'30-49', \n                '50 to 54':'50-64', \n                '55 to 59':'50-64',\n                '60 to 64':'50-64', \n                '65+':'>= 65'\n                }\n             \n# Clean the data\ndf = (ss_census_raw\n      [cols]\n      .rename(columns = cols_names)\n      .query('~age_cat.isna()')\n      .assign(gender = lambda x:x['gender'].str.split('\\s+').str[1],\n             age_cat = lambda x:x['age_cat'].replace(new_age_cats),\n             population = lambda x:x['population'].astype('int')\n      )\n      .query('gender != \"Total\" & age_cat != \"Total\"')\n      .groupby(['state', 'gender', 'age_cat'])['population']\n      .sum()\n      .reset_index()\n     )\n     \n# Inspect the first 5 rows\ndf.head()\n\n               state  gender age_cat  population\n0  Central Equatoria  Female    0-14      221216\n1  Central Equatoria  Female   15-29      166887\n2  Central Equatoria  Female   30-49      101676\n3  Central Equatoria  Female   50-64       23460\n4  Central Equatoria  Female   >= 65        8596\n\n\nIn the preceding code chunk, we first filtered the dataset using the desired columns, renamed the columns with the rename() method, and deleted the rows with missing values with the .query()method.\n\n\nUsing the split()\nFurther, as you can see above, the Variable Name column contains three pieces of information: Population, Total/Male/Female, and (Number), separated by both commas and spaces. This column contains gender information, so we’re only interested in the Total/Male/Female portion of this column. Therefore, we split this column into three columns using the .split() method (combined with str since this is a string), but we only kept the middle portion using its index.\nNext, we created new age categories to reduce the number of already existing age groups and used replace() to overwrite old categories. Then, we converted the population column 2008 to integer or numeric values using the .astype() method and supplied it with the data type int, short for integer. Lastly, we used the .query() to filter out the total rows in gender and the age category columns, grouped the data by state, gender, and age category, calculated the population’s sum, and then reset the index with .reset_index().\n\n\nThe Replace() Method\nThe replace() method from the pandas library works as follows:\n\ndf.replace(‘old value’, ’new value), for a single value.\ndf.replace([‘old value 1’, ‘old value 2’, ‘old value 3’], [‘new value 1’, ‘new value 2’, ‘new value 3’]) for a list of values.\ndf.replace({‘colum_name’: {‘old value 1’:‘new value 1’, ‘old value 2’:‘new value 2’}})"
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#summarizing-data-by-state-gender-and-age-category",
    "href": "posts/Quarto Tutorials/index.html#summarizing-data-by-state-gender-and-age-category",
    "title": "Marrying R with Python",
    "section": "Summarizing Data by State, Gender, and Age Category",
    "text": "Summarizing Data by State, Gender, and Age Category\n\nSummarizing Data by State - groupby()\n\n# Group the dataset by state and then summarize\nstate_df = (df\n            .groupby(['state'])['population']\n            .sum()\n            .reset_index()\n            .sort_values(['population'], ascending = False)\n            )\n\n# Print the output\nstate_df\n\n                     state  population\n2                  Jonglei     1358602\n0        Central Equatoria     1103557\n7                   Warrap      972928\n6               Upper Nile      964353\n1        Eastern Equatoria      906161\n4  Northern Bahr el Ghazal      720898\n3                    Lakes      695730\n9        Western Equatoria      619029\n5                    Unity      585801\n8   Western Bahr el Ghazal      333431\n\n\n\n\nSummarizing Data by State and Gender - groupby()\n\n# Group the dataset by state and gender; summarize.\ngender_df = (df\n             .groupby(['state', 'gender'])['population']\n             .sum()\n             .reset_index()\n             .sort_values(['population'], ascending = False)\n             )\n\n# Print the output\ngender_df\n\n                      state  gender  population\n5                   Jonglei    Male      734327\n4                   Jonglei  Female      624275\n1         Central Equatoria    Male      581722\n13               Upper Nile    Male      525430\n0         Central Equatoria  Female      521835\n14                   Warrap  Female      502194\n15                   Warrap    Male      470734\n3         Eastern Equatoria    Male      465187\n2         Eastern Equatoria  Female      440974\n12               Upper Nile  Female      438923\n8   Northern Bahr el Ghazal  Female      372608\n7                     Lakes    Male      365880\n9   Northern Bahr el Ghazal    Male      348290\n6                     Lakes  Female      329850\n19        Western Equatoria    Male      318443\n18        Western Equatoria  Female      300586\n11                    Unity    Male      300247\n10                    Unity  Female      285554\n17   Western Bahr el Ghazal    Male      177040\n16   Western Bahr el Ghazal  Female      156391\n\n\nNow that we have cleaned, manipulated, and transformed our dataset, we will shift our attention to exploratory data analysis (or EDA). So, in the above chunks, we grouped the dataset with the groupby() method by the state column and by state and gender columns, then computed states’ totals with the sum() method. Next, we reset the index with the reset_index() method. Additionally, we sorted our data using the .sort_values(),and we set ascending to False to arrange our dataset in descending order."
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#tabulating-the-data-with-the-pandas-pivot_table",
    "href": "posts/Quarto Tutorials/index.html#tabulating-the-data-with-the-pandas-pivot_table",
    "title": "Marrying R with Python",
    "section": "Tabulating the Data with the pandas pivot_table()",
    "text": "Tabulating the Data with the pandas pivot_table()\n\nSummarizing Data by State and Gender - pivot_table()\n\n# Pivot the dataset\ntable_1 = (df\n         .pivot_table(index = ['state', 'gender'],\n         values = 'population',  \n         aggfunc = np.sum, margins = True, \n         margins_name = 'total population')\n         .sort_values(['population'], ascending = False)\n         )\n \n# Print the output\ntable_1\n\n                                population\nstate                   gender            \ntotal population                   8260490\nJonglei                 Male        734327\n                        Female      624275\nCentral Equatoria       Male        581722\nUpper Nile              Male        525430\nCentral Equatoria       Female      521835\nWarrap                  Female      502194\n                        Male        470734\nEastern Equatoria       Male        465187\n                        Female      440974\nUpper Nile              Female      438923\nNorthern Bahr el Ghazal Female      372608\nLakes                   Male        365880\nNorthern Bahr el Ghazal Male        348290\nLakes                   Female      329850\nWestern Equatoria       Male        318443\n                        Female      300586\nUnity                   Male        300247\n                        Female      285554\nWestern Bahr el Ghazal  Male        177040\n                        Female      156391\n\n\n\nSummarizing by State, Gender, and Age Category - pivot_table()\n\n# Pivot the dataset\ntable_2 = (df\n           .pivot_table(index = ['state', 'gender', 'age_cat'],\n            values = 'population',  \n            aggfunc = np.sum, margins = True, \n            margins_name = 'total population')\n            .sort_values(['population'], ascending = False)\n         )\n \n# Print the output\ntable_2.head(10)\n\n                                  population\nstate             gender age_cat            \ntotal population                     8260490\nJonglei           Male   0-14         338443\n                  Female 0-14         263646\nCentral Equatoria Male   0-14         242247\nUpper Nile        Male   0-14         237461\nWarrap            Male   0-14         230854\n                  Female 0-14         222745\nCentral Equatoria Female 0-14         221216\nEastern Equatoria Male   0-14         212728\nJonglei           Male   15-29        195110\n\n\nAbove, we tabulated our data with the pivot_table() method. Next, we sorted the table by population column, and then we displayed the table. Here it’s worth noting that we obtained the same results that we got using the groupb() method.\n\nGrouping is one of the most powerful tools that pandas provides. It is the underpinning of the .pivot_table method, which in turn implements the `pd.cross_tab function. (Effective Pandas by Matt Harrison, 20221 p. 326)"
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#marrying-r-with-python",
    "href": "posts/Quarto Tutorials/index.html#marrying-r-with-python",
    "title": "Marrying R with Python",
    "section": "Marrying R with Python",
    "text": "Marrying R with Python\nAs we stated in the introduction section, this article aims to demonstrate that data scientists and data analysts (and indeed, data teams) can benefit tremendously by leveraging the powers and strengths of both R and Python instead of viewing these data science programming languages as rivals. Hence, in the below sections, we’ll visualize our data with the ggplot2 package, one of the tidyverse core packages.\n\nVisualizing the Data with ggplot2\nggplot2 is the most popular R data visualization package by Hadley Wickham. To begin with, we used py$ to call Python's object within the R's code chunk in the below chunk. Next, we initialized the canvas with the ggplot() function and assigned the state column to the x-axis and population column to the y-axis. Then, we sorted the state column values using the fct_order() and fct_rev() functions from the forcats package. This orders our data in descending order using the population column.\n\n# Convert Python dataframe into R data frame/tibble\nstate_tbl <- py$state_df \n \n\n# Plot state data\nstate_g <- \n  \n  state_tbl %>% \n  \n  # Modify state names to wrap around the x-axis.\n  mutate(state = state %>% str_wrap(width = 15),\n         state = state %>% fct_reorder(population) %>% fct_rev(),\n         label = population %>% \n           scales::number(scale = 1e-6, accuracy = 0.01, suffix = \"m\")) %>% \n  \n  # Initialize the canvas\n  ggplot(aes(state, population)) +\n       \n       # Add the geometries: we're using seaborn colorblind color #7.\n       geom_col(fill = '#84ba3d') +\n       ggrepel::geom_label_repel(aes(label = label)) +\n  \n       # Formatting\n       theme_tufte() +\n       \n       # Add the title, x-axis title, and y-axis title.\n       labs(\n         title    = 'South Sudan 2008 Census by State',\n         x        = NULL,\n         y        = 'Population',\n         caption  = 'Caption: Jonglei State has the largest population.') +\n      \n       # Adjust the y-axis scale.\n       scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = 'M')) +\n       \n       # Modify the y-axis limits.\n       expand_limits(y = c(0, 1500000)) +\n  \n       # Adjust graph attributes.\n       theme(\n         plot.title          = element_text(hjust  = 0.5, \n                                            face   = 'plain',\n                                            size   = 15,\n                                            margin = margin(0, 0, 15, 0, unit = \"pt\")),\n         plot.subtitle       = element_text(hjust  = 0.5, \n                                            margin = margin(2, 0, 10, 0, unit = \"pt\")),\n         axis.text.x         = element_text(angle  = 45, \n                                            hjust  = 1)\n       ) \n       \n# Display the graph.\nstate_g \n\n\n\n\n\n\n\n\n\n# Graph population by state and gender in ascending order.\ngender_tbl <- py$gender_df\n\n# Plot data by state and gender\ngender_g <- gender_tbl %>% \n  \n  # Modify state names to wrap around the x-axis.\n  mutate(state = state %>% str_wrap(width = 15),\n         state = state %>% fct_reorder(population) %>% fct_rev()) %>% \n  \n  # initialize the canvas\n  ggplot(aes(state, population)) +\n       \n  # Add the geometries.\n  geom_col(aes(fill = gender)) +\n  \n  # Adjust the y-axis scale.\n  scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = 'M')) +\n  expand_limits(y = c(0, 1500000)) +\n\n  # Formatting\n  theme_clean() +\n \n  # Add the title, x-axis title, and y-axis title.\n  labs(\n    title    = 'South Sudan 2008 Census Data by State and Gender',\n    x        = NULL,\n    y        = 'Population') +\n \n  # Adjust the graph attributes.\n  theme(\n     plot.title          = element_text(hjust  = 0.5,\n                                        face = 'plain',\n                                        margin = margin(0, 0, 15, 0, unit = \"pt\")),\n     plot.subtitle       = element_text(hjust  = 0.5,\n                                        margin = margin(2, 0, 10, 0, unit = \"pt\")),\n     axis.text.x         = element_text(angle = 30, hjust  = 1),\n     legend.position     = \"top\"\n   )\n\n\n# Display the graph\ngender_g\n\n\n\n\n We visualized the data by state and by state and gender in the preceding two sections. Moreover, we organized the data by population in descending order. It is best to display the data in ascending or descending order to avoid confusing your readers."
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#closing-remarks",
    "href": "posts/Quarto Tutorials/index.html#closing-remarks",
    "title": "Marrying R with Python",
    "section": "Closing Remarks",
    "text": "Closing Remarks\nThis post demonstrated how to perform data wrangling with pandas and visualize it with ggplot2 in RStudio. A word of caution: we are not saying that this is the actual population of South Sudan. Instead, we used the data to highlight a few data wrangling techniques within the pandas library.\nHowever, on the inferential side, government agencies would draw decisions about public amenities such as schools, kindergartens, maternity wards, and healthcare centers and where to build them from this analysis. The distribution of the national resources and state representations could be determined by this analysis as well. However, that’s not the objective of our post, and thus, we will leave it there."
  },
  {
    "objectID": "posts/Quarto Tutorials/index.html#references",
    "href": "posts/Quarto Tutorials/index.html#references",
    "title": "Marrying R with Python",
    "section": "References",
    "text": "References\nMcKinney, W.(2017). Python for Data Analysis, 2nd Edition. O’Reilly Media, Inc.\nHarrison, M. (2021). Effective Pandas: Patterns for data manipulation."
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#introduction",
    "href": "posts/Marrying R with Python/index.html#introduction",
    "title": "Marrying R with Python",
    "section": "Introduction",
    "text": "Introduction\n\nMost data scientists and data analysts would agree with the assertion that data scientists and data analysts spend about 80% of their time cleaning and transforming data - or, put, performing data wrangling. Because it’s imperative to transform your data into a tidy form before using it in your data science project. This means that aspiring data scientists and data analysts must learn data manipulation techniques and know the data munging tools in their programming languages of choice to succeed in their data science careers. This post demonstrates how to perform data wrangling with the pandas library - I love pandas, although I use R almost exclusively at work. We will first transform and manipulate the data with pandas and then visualize the results with the ggplot2 package.\nPandas was written by Wes McKinney as ” the open-source Python library for data analysis.” (Python for Data Analysis, 2017, pp.111)\n\npandas is built on top of NumPy and makes it easy to use in NumPy-centric applications. (Python for Data Analysis, 2017, pp.111)\n\nThis is the first article in our Data Wrangling With pandas series. So keep an eye on our next article - we plan to be releasing at least one piece quarterly.\n\nLoading R Packages\nHere we’ll load both tidyverse, even though we’ll use dplyr and ggplot2 from tidyverse (we could have loaded these packages individually, but we decided to load them this way).\n\n# Libraries\nlibrary(reticulate)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.5     ✔ purrr   0.3.4\n✔ tibble  3.1.6     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggthemes)\n\n\n\nLoading Python Libraries\nHere we’ll load pandas and NumPy libraries.\n\n# Importing the libraries\nimport pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#transforming-the-data",
    "href": "posts/Marrying R with Python/index.html#transforming-the-data",
    "title": "Marrying R with Python",
    "section": "Transforming the Data",
    "text": "Transforming the Data\nData transformation is the most crucial step when doing a data science project (because the success of your project depends on having a cleaned, tidy data). Therefore, it’s worthwhile taking your time to ensure that your data is thoroughly cleaned and transformed appropriately. This is the topic or objective of this article - performing data wrangling with the pandas library.\n\nImporting the Dataset\nWe’ll use the South Sudan 2008 Census dataset in this project. So, we’ll load it as shown below.\n\n# Importing the dataset\nss_census_raw = pd.read_csv('/Users/areng/Desktop/cushanalytics/00_data/ss_2008_census_data_raw.csv')\n\n# Inspect the first 5 Rows\nss_census_raw.head()\n\n  Region Region Name Region - RegionId  ...  Scale    Units      2008\n0  KN.A2  Upper Nile             SS-NU  ...  units  Persons  964353.0\n1  KN.A2  Upper Nile             SS-NU  ...  units  Persons  150872.0\n2  KN.A2  Upper Nile             SS-NU  ...  units  Persons  151467.0\n3  KN.A2  Upper Nile             SS-NU  ...  units  Persons  126140.0\n4  KN.A2  Upper Nile             SS-NU  ...  units  Persons  103804.0\n\n[5 rows x 10 columns]\n\n\n\n# Inspect the last 5 rows\nss_census_raw.tail()\n\n            Region  ...    2008\n448         KN.A11  ...  5274.0\n449         KN.A11  ...  8637.0\n450            NaN  ...     NaN\n451        Source:  ...     NaN\n452  Download URL:  ...     NaN\n\n[5 rows x 10 columns]\n\n\n\n\nDeleting Rows with Missing Values\nAs you can see in the above outputs, our dataset contains several columns that we do not need or do not make sense for our purpose, and the last 3 rows contain missing values. Next, let’s also inspect the last five rows and determine if our dataset has any missing values.\n\n# Checking for missing values\nss_census_raw.isna().sum()\n\nRegion               1\nRegion Name          1\nRegion - RegionId    3\nVariable             3\nVariable Name        3\nAge                  3\nAge Name             3\nScale                3\nUnits                3\n2008                 3\ndtype: int64\n\n\nThe above outputs of the last five rows indicate that our data contains multiple rows with missing values (or nas), the data source, and the download URL where we obtained our dataset. We’ll delete these rows that do not contribute any value to our analysis. Also, we see above that our dataset consists of 10 columns (or variables/features) and 453 rows (or observations). To obtain or display our data dimensions in Python, we use the shape, a data attribute. Python's data attributes are different from functions in that we omit the parentheses \"()\" after the attribute. Further, above, we displayed the counts of missing values in each column of our dataset with isna() to extract the rows with nas and then tallied them with sum() to find the sum of the rows with the missing values in each column. These methods come in handy when we want to quickly summarize the rows and columns with missing values in our dataset.\nNext, let’s check the count of rows and columns of our dataset.\n\n# Checking the number of rows and columns\nss_census_raw.shape\n\n(453, 10)\n\n\n\n\nExtracting Column Names\nBefore we begin our data cleaning process, let’s extract the columns as a list using the .to_list() method and subset our data with the columns of interest. Here, we’re only interested in these columns: ‘Region Name’, ‘Variable Name’, ‘Age Name’, and ‘2008’.\n\n# Print column names to the list\nss_census_raw.columns.to_list()\n\n# Subset the columns\n\n['Region', 'Region Name', 'Region - RegionId', 'Variable', 'Variable Name', 'Age', 'Age Name', 'Scale', 'Units', '2008']\n\ncols = ['Region Name', 'Variable Name', 'Age Name', '2008']\n\n\n\nCleaning the Data\n\n# Rename columns\ncols_names = {'Region Name':'state', \n             'Variable Name':'gender', \n             'Age Name':'age_cat', \n             '2008':'population'}\n             \n# Create new age categories           \nnew_age_cats = {'0 to 4':'0-14', \n                '5 to 9':'0-14',\n                '10 to 14':'0-14',\n                '15 to 19':'15-29', \n                '20 to 24':'15-29',\n                '25 to 29':'15-29',\n                '30 to 34':'30-49', \n                '35 to 39':'30-49',\n                '40 to 44':'30-49',\n                '45 to 49':'30-49', \n                '50 to 54':'50-64', \n                '55 to 59':'50-64',\n                '60 to 64':'50-64', \n                '65+':'>= 65'\n                }\n             \n# Clean the data\ndf = (ss_census_raw\n      [cols]\n      .rename(columns = cols_names)\n      .query('~age_cat.isna()')\n      .assign(gender = lambda x:x['gender'].str.split('\\s+').str[1],\n             age_cat = lambda x:x['age_cat'].replace(new_age_cats),\n             population = lambda x:x['population'].astype('int')\n      )\n      .query('gender != \"Total\" & age_cat != \"Total\"')\n      .groupby(['state', 'gender', 'age_cat'])['population']\n      .sum()\n      .reset_index()\n     )\n     \n# Inspect the first 5 rows\ndf.head()\n\n               state  gender age_cat  population\n0  Central Equatoria  Female    0-14      221216\n1  Central Equatoria  Female   15-29      166887\n2  Central Equatoria  Female   30-49      101676\n3  Central Equatoria  Female   50-64       23460\n4  Central Equatoria  Female   >= 65        8596\n\n\nIn the preceding code chunk, we first filtered the dataset using the desired columns, renamed the columns with the rename() method, and deleted the rows with missing values with the .query()method.\n\n\nUsing the split()\nFurther, as you can see above, the Variable Name column contains three pieces of information: Population, Total/Male/Female, and (Number), separated by both commas and spaces. This column contains gender information, so we’re only interested in the Total/Male/Female portion of this column. Therefore, we split this column into three columns using the .split() method (combined with str since this is a string), but we only kept the middle portion using its index.\nNext, we created new age categories to reduce the number of already existing age groups and used replace() to overwrite old categories. Then, we converted the population column 2008 to integer or numeric values using the .astype() method and supplied it with the data type int, short for integer. Lastly, we used the .query() to filter out the total rows in gender and the age category columns, grouped the data by state, gender, and age category, calculated the population’s sum, and then reset the index with .reset_index().\n\n\nThe Replace() Method\nThe replace() method from the pandas library works as follows:\n\ndf.replace(‘old value’, ’new value), for a single value.\ndf.replace([‘old value 1’, ‘old value 2’, ‘old value 3’], [‘new value 1’, ‘new value 2’, ‘new value 3’]) for a list of values.\ndf.replace({‘colum_name’: {‘old value 1’:‘new value 1’, ‘old value 2’:‘new value 2’}})"
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#summarizing-data-by-state-gender-and-age-category",
    "href": "posts/Marrying R with Python/index.html#summarizing-data-by-state-gender-and-age-category",
    "title": "Marrying R with Python",
    "section": "Summarizing Data by State, Gender, and Age Category",
    "text": "Summarizing Data by State, Gender, and Age Category\n\nSummarizing Data by State - groupby()\n\n# Group the dataset by state and then summarize\nstate_df = (df\n            .groupby(['state'])['population']\n            .sum()\n            .reset_index()\n            .sort_values(['population'], ascending = False)\n            )\n\n# Print the output\nstate_df\n\n                     state  population\n2                  Jonglei     1358602\n0        Central Equatoria     1103557\n7                   Warrap      972928\n6               Upper Nile      964353\n1        Eastern Equatoria      906161\n4  Northern Bahr el Ghazal      720898\n3                    Lakes      695730\n9        Western Equatoria      619029\n5                    Unity      585801\n8   Western Bahr el Ghazal      333431\n\n\n\n\nSummarizing Data by State and Gender - groupby()\n\n# Group the dataset by state and gender; summarize.\ngender_df = (df\n             .groupby(['state', 'gender'])['population']\n             .sum()\n             .reset_index()\n             .sort_values(['population'], ascending = False)\n             )\n\n# Print the output\ngender_df\n\n                      state  gender  population\n5                   Jonglei    Male      734327\n4                   Jonglei  Female      624275\n1         Central Equatoria    Male      581722\n13               Upper Nile    Male      525430\n0         Central Equatoria  Female      521835\n14                   Warrap  Female      502194\n15                   Warrap    Male      470734\n3         Eastern Equatoria    Male      465187\n2         Eastern Equatoria  Female      440974\n12               Upper Nile  Female      438923\n8   Northern Bahr el Ghazal  Female      372608\n7                     Lakes    Male      365880\n9   Northern Bahr el Ghazal    Male      348290\n6                     Lakes  Female      329850\n19        Western Equatoria    Male      318443\n18        Western Equatoria  Female      300586\n11                    Unity    Male      300247\n10                    Unity  Female      285554\n17   Western Bahr el Ghazal    Male      177040\n16   Western Bahr el Ghazal  Female      156391\n\n\nNow that we have cleaned, manipulated, and transformed our dataset, we will shift our attention to exploratory data analysis (or EDA). So, in the above chunks, we grouped the dataset with the groupby() method by the state column and by state and gender columns, then computed states’ totals with the sum() method. Next, we reset the index with the reset_index() method. Additionally, we sorted our data using the .sort_values(),and we set ascending to False to arrange our dataset in descending order."
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#tabulating-the-data-with-the-pandas-pivot_table",
    "href": "posts/Marrying R with Python/index.html#tabulating-the-data-with-the-pandas-pivot_table",
    "title": "Marrying R with Python",
    "section": "Tabulating the Data with the pandas pivot_table()",
    "text": "Tabulating the Data with the pandas pivot_table()\n\nSummarizing Data by State and Gender - pivot_table()\n\n# Pivot the dataset\ntable_1 = (df\n         .pivot_table(index = ['state', 'gender'],\n         values = 'population',  \n         aggfunc = np.sum, margins = True, \n         margins_name = 'total population')\n         .sort_values(['population'], ascending = False)\n         )\n \n# Print the output\ntable_1\n\n                                population\nstate                   gender            \ntotal population                   8260490\nJonglei                 Male        734327\n                        Female      624275\nCentral Equatoria       Male        581722\nUpper Nile              Male        525430\nCentral Equatoria       Female      521835\nWarrap                  Female      502194\n                        Male        470734\nEastern Equatoria       Male        465187\n                        Female      440974\nUpper Nile              Female      438923\nNorthern Bahr el Ghazal Female      372608\nLakes                   Male        365880\nNorthern Bahr el Ghazal Male        348290\nLakes                   Female      329850\nWestern Equatoria       Male        318443\n                        Female      300586\nUnity                   Male        300247\n                        Female      285554\nWestern Bahr el Ghazal  Male        177040\n                        Female      156391\n\n\n\nSummarizing by State, Gender, and Age Category - pivot_table()\n\n# Pivot the dataset\ntable_2 = (df\n           .pivot_table(index = ['state', 'gender', 'age_cat'],\n            values = 'population',  \n            aggfunc = np.sum, margins = True, \n            margins_name = 'total population')\n            .sort_values(['population'], ascending = False)\n         )\n \n# Print the output\ntable_2.head(10)\n\n                                  population\nstate             gender age_cat            \ntotal population                     8260490\nJonglei           Male   0-14         338443\n                  Female 0-14         263646\nCentral Equatoria Male   0-14         242247\nUpper Nile        Male   0-14         237461\nWarrap            Male   0-14         230854\n                  Female 0-14         222745\nCentral Equatoria Female 0-14         221216\nEastern Equatoria Male   0-14         212728\nJonglei           Male   15-29        195110\n\n\nAbove, we tabulated our data with the pivot_table() method. Next, we sorted the table by population column, and then we displayed the table. Here it’s worth noting that we obtained the same results that we got using the groupb() method.\n\nGrouping is one of the most powerful tools that pandas provides. It is the underpinning of the .pivot_table method, which in turn implements the `pd.cross_tab function. (Effective Pandas by Matt Harrison, 20221 p. 326)"
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#marrying-r-with-python",
    "href": "posts/Marrying R with Python/index.html#marrying-r-with-python",
    "title": "Marrying R with Python",
    "section": "Marrying R with Python",
    "text": "Marrying R with Python\nAs we stated in the introduction section, this article aims to demonstrate that data scientists and data analysts (and indeed, data teams) can benefit tremendously by leveraging the powers and strengths of both R and Python instead of viewing these data science programming languages as rivals. Hence, in the below sections, we’ll visualize our data with the ggplot2 package, one of the tidyverse core packages.\n\nVisualizing the Data with ggplot2\nggplot2 is the most popular R data visualization package by Hadley Wickham. To begin with, we used py$ to call Python's object within the R's code chunk in the below chunk. Next, we initialized the canvas with the ggplot() function and assigned the state column to the x-axis and population column to the y-axis. Then, we sorted the state column values using the fct_order() and fct_rev() functions from the forcats package. This orders our data in descending order using the population column.\n\n# Convert Python dataframe into R data frame/tibble\nstate_tbl <- py$state_df \n \n\n# Plot state data\nstate_g <- \n  \n  state_tbl %>% \n  \n  # Modify state names to wrap around the x-axis.\n  mutate(state = state %>% str_wrap(width = 15),\n         state = state %>% fct_reorder(population) %>% fct_rev(),\n         label = population %>% \n           scales::number(scale = 1e-6, accuracy = 0.01, suffix = \"m\")) %>% \n  \n  # Initialize the canvas\n  ggplot(aes(state, population)) +\n       \n       # Add the geometries: we're using seaborn colorblind color #7.\n       geom_col(fill = '#84ba3d') +\n       ggrepel::geom_label_repel(aes(label = label)) +\n  \n       # Formatting\n       theme_tufte() +\n       \n       # Add the title, x-axis title, and y-axis title.\n       labs(\n         title    = 'South Sudan 2008 Census by State',\n         x        = NULL,\n         y        = 'Population',\n         caption  = 'Caption: Jonglei State has the largest population.') +\n      \n       # Adjust the y-axis scale.\n       scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = 'M')) +\n       \n       # Modify the y-axis limits.\n       expand_limits(y = c(0, 1500000)) +\n  \n       # Adjust graph attributes.\n       theme(\n         plot.title          = element_text(hjust  = 0.5, \n                                            face   = 'plain',\n                                            size   = 15,\n                                            margin = margin(0, 0, 15, 0, unit = \"pt\")),\n         plot.subtitle       = element_text(hjust  = 0.5, \n                                            margin = margin(2, 0, 10, 0, unit = \"pt\")),\n         axis.text.x         = element_text(angle  = 45, \n                                            hjust  = 1)\n       ) \n       \n# Display the graph.\nstate_g \n\n\n\n\n\n\n\n\n\n# Graph population by state and gender in ascending order.\ngender_tbl <- py$gender_df\n\n# Plot data by state and gender\ngender_g <- gender_tbl %>% \n  \n  # Modify state names to wrap around the x-axis.\n  mutate(state = state %>% str_wrap(width = 15),\n         state = state %>% fct_reorder(population) %>% fct_rev()) %>% \n  \n  # initialize the canvas\n  ggplot(aes(state, population)) +\n       \n  # Add the geometries.\n  geom_col(aes(fill = gender)) +\n  \n  # Adjust the y-axis scale.\n  scale_y_continuous(labels = scales::number_format(scale = 1e-6, suffix = 'M')) +\n  expand_limits(y = c(0, 1500000)) +\n\n  # Formatting\n  theme_clean() +\n \n  # Add the title, x-axis title, and y-axis title.\n  labs(\n    title    = 'South Sudan 2008 Census Data by State and Gender',\n    x        = NULL,\n    y        = 'Population') +\n \n  # Adjust the graph attributes.\n  theme(\n     plot.title          = element_text(hjust  = 0.5,\n                                        face = 'plain',\n                                        margin = margin(0, 0, 15, 0, unit = \"pt\")),\n     plot.subtitle       = element_text(hjust  = 0.5,\n                                        margin = margin(2, 0, 10, 0, unit = \"pt\")),\n     axis.text.x         = element_text(angle = 30, hjust  = 1),\n     legend.position     = \"top\"\n   )\n\n\n# Display the graph\ngender_g\n\n\n\n\n\n\n\n\n We visualized the data by state and by state and gender in the preceding two sections. Moreover, we organized the data by population in descending order. It is best to display the data in ascending or descending order to avoid confusing your readers."
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#closing-remarks",
    "href": "posts/Marrying R with Python/index.html#closing-remarks",
    "title": "Marrying R with Python",
    "section": "Closing Remarks",
    "text": "Closing Remarks\nThis post demonstrated how to perform data wrangling with pandas and visualize it with ggplot2 in RStudio. A word of caution: we are not saying that this is the actual population of South Sudan. Instead, we used the data to highlight a few data wrangling techniques within the pandas library.\nHowever, on the inferential side, government agencies would draw decisions about public amenities such as schools, kindergartens, maternity wards, and healthcare centers and where to build them from this analysis. The distribution of the national resources and state representations could be determined by this analysis as well. However, that’s not the objective of our post, and thus, we will leave it there."
  },
  {
    "objectID": "posts/Marrying R with Python/index.html#references",
    "href": "posts/Marrying R with Python/index.html#references",
    "title": "Marrying R with Python",
    "section": "References",
    "text": "References\nMcKinney, W.(2017). Python for Data Analysis, 2nd Edition. O’Reilly Media, Inc.\nHarrison, M. (2021). Effective Pandas: Patterns for data manipulation."
  }
]